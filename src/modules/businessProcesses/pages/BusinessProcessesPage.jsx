import React, { useEffect, useState } from "react";
import Layout from "../../../components/layout/Layout";
import "./BusinessProcessesPage.css";
import api from "../../../services/api";

export default function BusinessProcessesPage() {
  const [items, setItems] = useState([]);
  const [loading, setLoading] = useState(false);
  const [q, setQ] = useState("");
  const [error, setError] = useState("");

  const load = async () => {
    setLoading(true);
    setError("");
    try {
      // TODO: –∑–∞–º—ñ–Ω–∏—Ç–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω–∏–π –µ–Ω–¥–ø–æ—ñ–Ω—Ç, –∫–æ–ª–∏ –±—É–¥–µ –≥–æ—Ç–æ–≤–∏–π –±–µ–∫
      // –ø—Ä–∏–∫–ª–∞–¥: const r = await api.get("/business-processes", { params: { q } });
      // setItems(r.data || []);
      setItems([]); // –ø–æ—Ä–æ–∂–Ω—ñ–π —Å—Ç–∞–Ω –¥–æ —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó
    } catch (e) {
      setError(e?.response?.data?.message || "–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –±—ñ–∑–Ω–µ—Å‚Äë–ø—Ä–æ—Ü–µ—Å–∏");
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    load();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  const onCreate = () => {
    // TODO: –≤—ñ–¥–∫—Ä–∏–≤–∞—Ç–∏ –º–æ–¥–∞–ª–∫—É/—Å—Ç–æ—Ä—ñ–Ω–∫—É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ—Ü–µ—Å—É
    alert("–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±—ñ–∑–Ω–µ—Å‚Äë–ø—Ä–æ—Ü–µ—Å—É (—Å–∫–æ—Ä–æ)");
  };

  const filtered = q.trim()
    ? items.filter((x) => (x.name || "").toLowerCase().includes(q.toLowerCase()))
    : items;

  return (
    <Layout title="–ë—ñ–∑–Ω–µ—Å –ø—Ä–æ—Ü–µ—Å–∏">
      <div className="bp">
        <div className="bp-head">
          <h1>–ë—ñ–∑–Ω–µ—Å –ø—Ä–æ—Ü–µ—Å–∏</h1>
          <div className="bp-actions">
            <input
              className="input"
              placeholder="–ü–æ—à—É–∫ –∑–∞ –Ω–∞–∑–≤–æ—é‚Ä¶"
              value={q}
              onChange={(e) => setQ(e.target.value)}
            />
            <button className="btn primary" onClick={onCreate}>+ –ù–æ–≤–∏–π –ø—Ä–æ—Ü–µ—Å</button>
          </div>
        </div>

        {error && <div className="bp-error">{error}</div>}

        {/* –ü–æ—Ä–æ–∂–Ω—ñ–π —Å—Ç–∞–Ω */}
        {!loading && filtered.length === 0 && (
          <div className="card bp-empty">
            <div className="bp-empty__icon">üèóÔ∏è</div>
            <div className="bp-empty__title">–ü–æ–∫–∏ —â–æ –Ω–µ–º–∞—î –±—ñ–∑–Ω–µ—Å‚Äë–ø—Ä–æ—Ü–µ—Å—ñ–≤</div>
            <div className="bp-empty__text">
              –°—Ç–≤–æ—Ä—ñ—Ç—å –ø–µ—Ä—à–∏–π –ø—Ä–æ—Ü–µ—Å ‚Äî –æ–ø–∏—à—ñ—Ç—å –∫—Ä–æ–∫–∏, —Ä–æ–ª—ñ —Ç–∞ –ø–æ–∫–∞–∑–Ω–∏–∫–∏. –£—Å–µ –≤ —î–¥–∏–Ω–æ–º—É –º—ñ—Å—Ü—ñ.
            </div>
            <div className="bp-empty__actions">
              <button className="btn primary" onClick={onCreate}>–°—Ç–≤–æ—Ä–∏—Ç–∏ –ø—Ä–æ—Ü–µ—Å</button>
              <button className="btn ghost" onClick={load}>–û–Ω–æ–≤–∏—Ç–∏</button>
            </div>
          </div>
        )}

        {/* –°–ø–∏—Å–æ–∫ (–ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä –ø—ñ–¥ –º–∞–π–±—É—Ç–Ω—é —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—é) */}
        {loading && <div className="bp-loading">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è‚Ä¶</div>}

        {!loading && filtered.length > 0 && (
          <div className="bp-list">
            {filtered.map((bp) => (
              <div key={bp.id} className="bp-item card">
                <div className="bp-item__top">
                  <div className="bp-item__title">{bp.name}</div>
                  <div className="bp-item__actions">
                    <button className="btn xs ghost" title="–†–µ–¥–∞–≥—É–≤–∞—Ç–∏">‚úèÔ∏è</button>
                    <button className="btn xs danger" title="–í–∏–¥–∞–ª–∏—Ç–∏">üóëÔ∏è</button>
                  </div>
                </div>
                <div className="bp-item__meta">
                  –û–Ω–æ–≤–ª–µ–Ω–æ: {bp.updated_at ? new Date(bp.updated_at * 1000).toLocaleString() : "‚Äî"}
                </div>
              </div>
            ))}
          </div>
        )}
      </div>
    </Layout>
  );
}

